import tkinter as tk
from tkinter import messagebox

def show_custom_message(title, message):
    custom_dialog = tk.Toplevel()
    custom_dialog.title(title)
    custom_dialog.configure(bg="#AED6F1")  # ‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏ó‡∏ô‡πÄ‡∏¢‡πá‡∏ô
    
    label = tk.Label(custom_dialog, text=message, font=("Arial", 14), bg="#AED6F1", fg="#154360", wraplength=400)
    label.pack(padx=20, pady=20)
    
    close_button = tk.Button(custom_dialog, text="‡∏ï‡∏Å‡∏•‡∏á", font=("Arial", 12), bg="#5DADE2", fg="white", command=custom_dialog.destroy)
    close_button.pack(pady=10)

def calculate_fine(vehicle_type, distance, time, has_license):
    speed_limits = {
        "‡∏à‡∏±‡∏Å‡∏£‡∏¢‡∏≤‡∏ô‡∏¢‡∏ô‡∏ï‡πå": 80,
        "‡∏£‡∏ñ‡∏ö‡∏£‡∏£‡∏ó‡∏∏‡∏Å": 90,
        "‡∏£‡∏ñ‡∏¢‡∏ô‡∏ï‡πå 4 ‡∏•‡πâ‡∏≠": 110
    }
    fines = {
        "‡∏à‡∏±‡∏Å‡∏£‡∏¢‡∏≤‡∏ô‡∏¢‡∏ô‡∏ï‡πå": 4000,
        "‡∏£‡∏ñ‡∏ö‡∏£‡∏£‡∏ó‡∏∏‡∏Å": 4000,
        "‡∏£‡∏ñ‡∏¢‡∏ô‡∏ï‡πå 4 ‡∏•‡πâ‡∏≠": 4000
    }
    license_fine = 500
    
    if vehicle_type not in speed_limits:
        return "‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏û‡∏≤‡∏´‡∏ô‡∏∞‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á", 0
    
    speed = distance / time
    speed_limit = speed_limits[vehicle_type]
    fine = fines[vehicle_type]
    total_fine = 0
    reason = ""
    
    if speed > speed_limit:
        total_fine = fine
        reason = f"üöó ‡∏Ç‡∏±‡∏ö‡∏£‡∏ñ‡πÄ‡∏£‡πá‡∏ß‡πÄ‡∏Å‡∏¥‡∏ô‡∏Å‡∏≥‡∏´‡∏ô‡∏î (‡πÄ‡∏Å‡∏¥‡∏ô {speed_limit} km/h)"
        if has_license:
            total_fine += license_fine
            reason += " ‡πÅ‡∏•‡∏∞‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡∏õ‡∏£‡∏±‡∏ö‡πÉ‡∏ö‡∏Ç‡∏±‡∏ö‡∏Ç‡∏µ‡πà‡πÄ‡∏û‡∏¥‡πà‡∏° ü™™"
        return f"‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•‡∏ó‡∏µ‡πà‡πÇ‡∏î‡∏ô‡∏õ‡∏£‡∏±‡∏ö: {reason}\n‡∏Ñ‡∏∏‡∏ì‡∏Ç‡∏±‡∏ö‡πÄ‡∏£‡πá‡∏ß‡πÄ‡∏Å‡∏¥‡∏ô‡∏Å‡∏≥‡∏´‡∏ô‡∏î ({speed_limit} km/h) ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠ {speed:.2f} km/h ‡∏Ñ‡πà‡∏≤‡∏õ‡∏£‡∏±‡∏ö {total_fine} ‡∏ö‡∏≤‡∏ó", total_fine
    else:
        return f"‚úÖ ‡∏Ñ‡∏∏‡∏ì‡∏Ç‡∏±‡∏ö‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡∏ó‡∏µ‡πà‡∏Å‡∏é‡∏´‡∏°‡∏≤‡∏¢‡∏Å‡∏≥‡∏´‡∏ô‡∏î ({speed:.2f} km/h) ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡∏õ‡∏£‡∏±‡∏ö", total_fine

def calculate_and_display():
    vehicle_type = vehicle_var.get()
    try:
        distance = float(distance_entry.get())
        time = float(time_entry.get())
        has_license = license_var.get()
        
        result, total_fine = calculate_fine(vehicle_type, distance, time, has_license)
        show_custom_message("‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì", f"{result}\nüí∞ ‡∏™‡∏£‡∏∏‡∏õ‡∏¢‡∏≠‡∏î‡∏Ñ‡πà‡∏≤‡∏õ‡∏£‡∏±‡∏ö‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: {total_fine} ‡∏ö‡∏≤‡∏ó")
    except ValueError:
        show_custom_message("‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î", "‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡∏£‡∏∞‡∏¢‡∏∞‡∏ó‡∏≤‡∏á‡πÅ‡∏•‡∏∞‡πÄ‡∏ß‡∏•‡∏≤")

# ‡∏™‡∏£‡πâ‡∏≤‡∏á GUI
root = tk.Tk()
root.title("‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Ñ‡πà‡∏≤‡∏õ‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡πÄ‡∏Å‡∏¥‡∏ô‡∏Å‡∏é‡∏´‡∏°‡∏≤‡∏¢")
root.configure(bg="#D6EAF8")  # ‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏ó‡∏ô‡πÄ‡∏¢‡πá‡∏ô (‡∏™‡∏µ‡∏ü‡πâ‡∏≤‡∏≠‡πà‡∏≠‡∏ô)

# ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏û‡∏≤‡∏´‡∏ô‡∏∞
vehicle_var = tk.StringVar(value="‡∏à‡∏±‡∏Å‡∏£‡∏¢‡∏≤‡∏ô‡∏¢‡∏ô‡∏ï‡πå")
tk.Label(root, text="üöò ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏û‡∏≤‡∏´‡∏ô‡∏∞:", font=("Arial", 12), bg="#D6EAF8").pack()
tk.OptionMenu(root, vehicle_var, "‡∏à‡∏±‡∏Å‡∏£‡∏¢‡∏≤‡∏ô‡∏¢‡∏ô‡∏ï‡πå", "‡∏£‡∏ñ‡∏ö‡∏£‡∏£‡∏ó‡∏∏‡∏Å", "‡∏£‡∏ñ‡∏¢‡∏ô‡∏ï‡πå 4 ‡∏•‡πâ‡∏≠").pack()

# ‡∏ä‡πà‡∏≠‡∏á‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏∞‡∏¢‡∏∞‡∏ó‡∏≤‡∏á
tk.Label(root, text="üìè ‡∏£‡∏∞‡∏¢‡∏∞‡∏ó‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏Ç‡∏±‡∏ö‡∏Ç‡∏µ‡πà (‡∏Å‡∏¥‡πÇ‡∏•‡πÄ‡∏°‡∏ï‡∏£):", font=("Arial", 12), bg="#D6EAF8").pack()
distance_entry = tk.Entry(root, font=("Arial", 12))
distance_entry.pack()

# ‡∏ä‡πà‡∏≠‡∏á‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏ß‡∏•‡∏≤
tk.Label(root, text="‚è≥ ‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ (‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á):", font=("Arial", 12), bg="#D6EAF8").pack()
time_entry = tk.Entry(root, font=("Arial", 12))
time_entry.pack()

# ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏°‡∏µ‡πÉ‡∏ö‡∏Ç‡∏±‡∏ö‡∏Ç‡∏µ‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
license_var = tk.BooleanVar()
tk.Checkbutton(root, text="ü™™ ‡∏°‡∏µ‡πÉ‡∏ö‡∏Ç‡∏±‡∏ö‡∏Ç‡∏µ‡πà", variable=license_var, font=("Arial", 12), bg="#D6EAF8").pack()

# ‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì
calculate_button = tk.Button(root, text="üö¶ ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Ñ‡πà‡∏≤‡∏õ‡∏£‡∏±‡∏ö", font=("Arial", 12), bg="#5DADE2", fg="white", command=calculate_and_display)
calculate_button.pack(pady=10)

# ‡πÄ‡∏£‡∏¥‡πà‡∏° GUI
root.mainloop()
